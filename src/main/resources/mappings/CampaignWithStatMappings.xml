<?xml version="1.0" encoding="UTF-8"?>
<!-- 
<entity-mappings xmlns="http://java.sun.com/xml/ns/persistence/orm"
                 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                 xsi:schemaLocation="
                     http://java.sun.com/xml/ns/persistence/orm
                     http://java.sun.com/xml/ns/persistence/orm_1_0.xsd"
                 version="1.0">
-->
<entity-mappings version="2.1" xmlns="http://xmlns.jcp.org/xml/ns/persistence/orm"
                 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                 xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence/orm
    http://xmlns.jcp.org/xml/ns/persistence/orm_2_1.xsd">
    <!-- 
	<entity class="domain.CampaignWithStatEntity">
	 -->
	 <!--
	 SELECT new domain.CampaignWithStat(cam, 0) FROM Campaign cam 
	 
	 SELECT mag FROM Magazine mag LEFT JOIN FETCH mag.articles WHERE mag.id = 1
	 
            SELECT new domain.CampaignWithStat(cam, 0) FROM Campaign cam
            JOIN AdSet ads
	 
            SELECT new domain.CampaignWithStat(cam, st.impressions) FROM Campaign cam
            JOIN cam.adSets ads
            JOIN ads.ads ad
            JOIN ad.stats st	 
	  -->
	 <entity class="domain.Campaign">
        <named-query name="getCampaingsWithStat">
            <query><![CDATA[
            SELECT new domain.CampaignWithStat(cam, SUM(st.impressions)) FROM Campaign cam
            LEFT JOIN cam.adSets ads
            LEFT JOIN ads.ads ad
            LEFT JOIN ad.stats st
            GROUP BY cam.id
            ]]></query>
        </named-query>
	  <!-- 
        <named-query name="getCampaingsWithStat">
            <query><![CDATA[
            SELECT new domain.CampaignWithStat(cam, SUM(st.impressions)) FROM Campaign cam
            LEFT JOIN cam.adSets ads
            LEFT JOIN ads.ads ad
            LEFT JOIN ad.stats st
            GROUP BY cam.id
            ORDER BY :order :sort
            ]]></query>
        </named-query>
        -->
        <!-- 
        <named-native-query name="getCampaingsWithStat" result-set-mapping="getCampaingsWithStatMapping">
            <query><![CDATA[
            SELECT CAM.CAM_ID, CAM.CAM_NAME, SUM(STA_IMPRESSIONS) AS IMPRESSIONS  
			  		FROM CAMPAIGNS CAM  
			  		LEFT JOIN ADSETS ADS ON CAM.CAM_ID = ADS.CAM_ID  
			  		LEFT JOIN ADS AD ON ADS.ADS_ID = AD.ADS_ID  
			  		LEFT JOIN AD_STATS STA ON AD.AD_ID = STA.AD_ID
			  		GROUP BY CAM.CAM_ID
            		ORDER BY :order :sort
            ]]></query>
        </named-native-query>
        <named-native-query name="getCampaingsWithStat.count" result-set-mapping="getCampaingsWithStatMapping.count">
            <query><![CDATA[
            SELECT COUNT(*) as CNT FROM CAMPAIGNS
            ]]></query>
        </named-native-query>
		<sql-result-set-mapping name="getCampaingsWithStatMapping">
		    <constructor-result target-class="domain.CampaignWithStat">
		        <column name="CAM_ID" class="java.lang.Long"/>
		        <column name="CAM_NAME"/>
		        <column name="IMPRESSIONS" class="java.lang.Long"/>
		    </constructor-result>
		</sql-result-set-mapping>         
        <sql-result-set-mapping name="getCampaingsWithStatMapping.count">
            <column-result name="CNT" />
        </sql-result-set-mapping>
        -->
        <!--
    @SqlResultSetMapping(name = "SqlResultSetMapping.count", columns = @ColumnResult(name = "CNT"))     
	@SqlResultSetMapping(
		    name = "getCampaingsWithStatMapping",
		    classes = @ConstructorResult(
		            targetClass = CampaignWithStat.class,
		            columns = {
		                    @ColumnResult(name = "CAM_ID", type = Long.class),
		                    @ColumnResult(name = "CAM_NAME"),
		                    @ColumnResult(name = "IMPRESSIONS", type = Integer.class)
		            }
		    )
		),
        
         -->
        <!--
<sql-result-set-mapping name="BookValueMappingXml">
    <constructor-result target-class="org.thoughts.on.java.jpa.value.BookValue">
        <column name="id" class="java.lang.Long"/>
        <column name="title"/>
        <column name="version" class="java.lang.Long"/>
        <column name="authorName"/>
    </constructor-result>
</sql-result-set-mapping>         
         -->
		<!-- 
        <named-native-query name="myQuery" result-set-mapping="nicknames">
            <query><![CDATA[
            select a.nickname from Account a
            ]]></query>
        </named-native-query>
        <sql-result-set-mapping name="nicknames">
            <column-result name="nickname" />
        </sql-result-set-mapping>
         -->
    </entity>             

</entity-mappings>
